@page "/"
@inject IJSRuntime JS

<div class="row">
    <select name="remote" id="remote" class="form-select col mx-1">
        <option value="LLAMA" selected>LLAMA</option>
    </select>
    <select name="local" id="local" class="form-select col mx-1">
        <option value="sentime">local_model</option>
    </select>
</div>

<div class="row">
    <p id="remoteH" class="col bg-dark text-white mx-1">

    </p>

    <p id="localH" class="col bg-dark text-white mx-1">
    </p>
</div>

<div class="row">
    <input type="text" id="note" class="col bg-dark text-white mx-1" @onkeydown="Compare">
    </input>
</div>
<div class="row justify-content-end">
    <button class="btn btn-dark btn-sm col-auto">Save history</button>
</div>

<script>
    function getText()
    {
        return document.getElementById("note").value;
    }
    function clearText()
    {
        document.getElementById("note").value = "";
    }
    function setChats(remote, local)
    {
        document.getElementById("remoteH").innerText += "\n" + remote;
        document.getElementById("localH").innerText += "\n" + local;
    }
</script>

@code {
    public HttpClient httpClient = new HttpClient();
    public Dictionary<string, string> response = new Dictionary<string, string>();

    public async Task Compare(KeyboardEventArgs e)
    {
        if (e.Key != "Enter")
        {
            return;
        }
        var text = await JS.InvokeAsync<string>("getText");
        if (text == null || text == "")
        {
            return;
        }
        var data = new { query = text };

        var content = JsonContent.Create(data);
        var response = await httpClient.PostAsync("http://127.0.0.1:8000/compare", content);

        if (response.IsSuccessStatusCode)
        {
            var jsonResponse = await response.Content.ReadAsStringAsync();
            var responseDict = JsonSerializer.Deserialize<Dictionary<string, string>>(jsonResponse);
            this.response = responseDict;
            await JS.InvokeVoidAsync("setChats", responseDict["external_huggingface"], responseDict["local_model"]);
        }
        else
        {
            // Handle error status code
            Console.WriteLine($"Failed to post data. Status code: {response.StatusCode}");
        }
        await JS.InvokeVoidAsync("clearText");
    }
}